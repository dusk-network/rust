# Instructions for GitHub to build Dusk's smart contract compilers.

on:
  pull_request:
  push:
    branches:
      - release-0.3.0-rc

name: Dusk Contract Compilers

jobs:
  target:
    strategy:
      matrix:
        target: [
          x86_64-unknown-linux-gnu,
          x86_64-apple-darwin,
          aarch64-apple-darwin,
          aarch64-unknown-linux-gnu,
        ]
        include:
          - os: linux-gh-4-16-150
            target: x86_64-unknown-linux-gnu
          - os: macos-latest-large
            target: x86_64-apple-darwin
          - os: macos-latest-xlarge
            target: aarch64-apple-darwin
          - os: arm-linux
            target: aarch64-unknown-linux-gnu
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt update && sudo apt install -y ninja-build

      - name: Setup dependencies
        if: startsWith(matrix.os, 'macos')
        run: |
          brew install ninja gettext &&
          brew link --force gettext &&
          brew install llvm

      - name: Change cc and ar to wasm-supported versions
        if: startsWith(matrix.os, 'macos')
        run: |
          LLVM_PATH=$(brew --prefix llvm)
          echo "
          [target.wasm32-unknown-unknown]
          cc = \"$LLVM_PATH/bin/clang\"
          ar = \"$LLVM_PATH/bin/llvm-ar\"

          [target.wasm64-unknown-unknown]
          cc = \"$LLVM_PATH/bin/clang\"
          ar = \"$LLVM_PATH/bin/llvm-ar\"
          " >> config.template.toml
          
      - name: Generate configuration
        run: |
          HOST=${{ matrix.target }} envsubst < config.template.toml > config.toml &&
          cat config.toml
      - name: Install dependencies
        if: matrix.os == 'linux-gh-4-16-150' || matrix.os == 'arm-linux'
        run: sudo apt update && sudo apt install -y ninja-build

      - name: Install dependencies
        if: matrix.os == 'macos-latest-large' || matrix.os == 'macos-latest-xlarge' 
        run: brew install ninja openssl@3

      - name: Run build

        run: |
          git remote add upstream https://github.com/rust-lang/rust.git
          ./x.py dist

      - name: Set artifact name
        id: artifact-name
        run: |
          if [ "${{ github.ref_type }}" == "tag" ]; then
            echo "name=duskc-${{ matrix.target }}-${{ github.ref_name }}" >> "$GITHUB_OUTPUT"
          else
            echo "name=duskc-${{ matrix.target }}-${{ github.sha }}" >> "$GITHUB_OUTPUT"
          fi

      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.artifact-name.outputs.name }}
          path: build/dist/
